#include<iostream>
#include<cstring>

using namespace std;

string map[101][101];
int isVisited[101][101] = {false,};
int N,M;
//int wCount, bCount;
int wAns, bAns;
int dx[] = {0,0,-1,1};
int dy[] = {1,-1,0,0};
bool flag = false;

void dfs(int x, int y, int cnt){
    
    isVisited[x][y] = true;
    
    for(int i=0; i<4; i++){
        
        int nx = x + dx[i];
        int ny = y + dy[i];
        
        if(nx<0 || ny<0 || nx>=M || ny>= N) continue;
        
        if(isVisited[nx][ny] == false){
            
            if(map[nx][ny] == "W"){
                flag = false;
                dfs(nx,ny,cnt+1);
            }else if(map[nx][ny] == "B"){
                flag = true;
                dfs(nx,ny,cnt+1);   
            }
        }
        
    }
    
    
    
}

int main(){
    
    cin >> N >> M;
    
    for(int i=0; i<M; i++){
        for(int j=0; j<N; j++){
            cin >> map[i][j];    
        }
    }
    
    for(int i=0; i<M; i++){
        for(int j=0; j<N; j++){
            int cnt = 0;
            if(isVisited[i][j] == false){
                cnt = cnt + 1;
                dfs(i,j,cnt);
                
                if(flag == false){
                    cnt *= cnt;
                    wAns += cnt;
                }else if(flag == true){
                    cnt *= cnt;
                    bAns += cnt;
                    
                }
                
            }
        }
    }
     
    cout << wAns << bAns << endl;
    return 0;
}