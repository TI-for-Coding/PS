#include<iostream>
#include<cstring>

using namespace std;


int N,M;
string map[101][101];
int isVisited[101][101] = {false,};
int wAns, bAns, changeFlag;
int dx[] = {0,0,-1,1};
int dy[] = {1,-1,0,0};


void dfs(int x, int y, int cnt){
	
	isVisited[x][y] = true;
	
	for(int i=0; i<4; i++){
		int nx = x + dx[i];
		int ny = y + dy[i];
		
		if(nx<0 || ny<0 || nx>=M || ny>=N ) continue;
		
		if(changeFlag == 1 && map[nx][ny] == "B") continue;
		if(changeFlag == 2 && map[nx][ny] == "W") continue;
		
		if(isVisited[nx][ny] == false){
			isVisited[nx][ny] = true;
			dfs(nx,ny,cnt+1);
		}
	}
	
	
}


int main(){
	
	cin >> N >> M;
	
	for(int i=0; i<M; i++){
		for(int j=0; j<N; j++){
			cin >> map[i][j];	
		}
	}
	
	
	for(int i=0; i<M; i++){
		for(int j=0; j<N; j++){
			int cnt = 0;
			if(isVisited[i][j] == false){
				cnt += 1;
				if(map[i][j] == "W"){
					changeFlag = 1;
					dfs(i,j,cnt);
					wAns += cnt * cnt;
				}else if(map[i][j] == "B"){
					changeFlag = 2;
					dfs(i,j,cnt);
					bAns += cnt * cnt;
				}
			}
		}
	}
    cout << wAns << bAns << endl;
	
	
	return 0;	
}
