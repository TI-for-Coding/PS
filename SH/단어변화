import java.util.*;
class Solution {
    
    int answer=Integer.MAX_VALUE;
    
    public int solution(String begin, String target, String[] words) {

        boolean isFind = false;
        for(int i=0;i<words.length;i++){
            if(target.equals(words[i])){
                isFind=true;
                break;
            }
        }
        if(isFind==false) return 0;
        
        boolean[] visited = new boolean[words.length];
        DFS(begin,target,words,visited,0);
        return answer;
    }
    
    public void DFS(String begin , String target, String[] words, boolean[] visited, int sum){
        for(int i=0;i<words.length;i++){
            if(visited[i] == true) continue;
            int cnt=0;
            for(int j=0;j<begin.length();j++){
                if(begin.charAt(j)==words[i].charAt(j)) cnt++;
            }
            
            if(cnt==begin.length()-1){
                if(target.equals(words[i])){
                    if(sum+1<answer){
                        answer=sum+1;
                    }
                    return;
                }
                visited[i]=true;
                DFS(words[i],target,words,visited, sum+1);
                visited[i]=false;
            }
        }    
    }
}
